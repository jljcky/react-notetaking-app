{"version":3,"sources":["NoteField.jsx","NoteDrag.jsx","NoteResize.jsx","NoteDelete.jsx","Note.jsx","Noteboard.jsx","App.js","serviceWorker.js","index.js"],"names":["NoteField","className","disabled","this","props","isNotIdle","value","description","onChange","e","writeNote","Component","NoteDrag","cursor","isDragging","style","NoteResize","display","selected","left","x","side","top","y","width","height","NoteDelete","onClick","deleteNote","noteId","Note","note","zIndex","onMouseDown","selectNote","id","target","dragNote","resizeNote","Noteboard","state","isResizing","noteID","selectedNoteID","notes","mouseX","mouseY","dX","dY","currentTarget","setState","prevState","deselectNote","createNote","push","clientX","clientY","getMouseInfoFromNote","find","workWithNote","func","index","findIndex","action","mouseInfo","filter","console","log","map","key","onDoubleClick","onMouseMove","onMouseUp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f5e3e561.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NoteField extends Component {\r\n  render() {\r\n    return (\r\n      <textarea\r\n        className=\"note-field\"\r\n        disabled={this.props.isNotIdle}\r\n        value={this.props.description}\r\n        onChange={(e) => {\r\n          this.props.writeNote(e);\r\n        }}\r\n      ></textarea>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteField;\r\n","import React from \"react\";\r\n\r\nconst NoteDrag = (props) => {\r\n  let cursor = props.isDragging ? \"grabbing\" : \"grab\";\r\n  return <div className=\"note-drag\" style={{ cursor: cursor }}></div>;\r\n};\r\n\r\nexport default NoteDrag;\r\n","import React from \"react\";\r\n\r\nconst NoteResize = (props) => {\r\n  let display = props.selected ? \"initial\" : \"none\";\r\n  return (\r\n    <div\r\n      className=\"note-resize\"\r\n      style={{\r\n        left: props.x - props.side / 2,\r\n        top: props.y - props.side / 2,\r\n        width: props.side,\r\n        height: props.side,\r\n        display: display,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default NoteResize;\r\n","import React from \"react\";\r\n\r\nconst NoteDelete = (props) => {\r\n  let display = props.selected ? \"initial\" : \"none\";\r\n  return (\r\n    <div\r\n      className=\"note-delete\"\r\n      onClick={(e) => {\r\n        props.deleteNote(e, props.noteId);\r\n      }}\r\n      style={{\r\n        left: props.x - props.side / 2,\r\n        top: 0 - props.side / 2,\r\n        width: props.side,\r\n        height: props.side,\r\n        display: display,\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default NoteDelete;\r\n","import React, { Component } from \"react\";\r\nimport NoteField from \"./NoteField\";\r\nimport NoteDrag from \"./NoteDrag\";\r\nimport NoteResize from \"./NoteResize\";\r\nimport NoteDelete from \"./NoteDelete\";\r\n\r\nclass Note extends Component {\r\n  render() {\r\n    let { note } = this.props;\r\n    let minWidth = 100;\r\n    let minHeight = 100;\r\n    let width = note.width > minWidth ? note.width : minWidth;\r\n    let height = note.height > minHeight ? note.height : minHeight;\r\n\r\n    return (\r\n      <div\r\n        className=\"note\"\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          left: note.x,\r\n          top: note.y,\r\n          zIndex: note.zIndex,\r\n        }}\r\n        onMouseDown={(e) => {\r\n          this.props.selectNote(e, note.id);\r\n          if (e.target.className === \"note-drag\")\r\n            this.props.dragNote(e, note.id, \"mousedown\");\r\n          else if (e.target.className === \"note-resize\")\r\n            this.props.resizeNote(e, note.id, \"mousedown\");\r\n        }}\r\n      >\r\n        <NoteDrag isDragging={this.props.isDragging} />\r\n        <NoteField\r\n          description={note.description}\r\n          writeNote={this.props.writeNote}\r\n          isNotIdle={this.props.isNotIdle}\r\n        />\r\n        <NoteResize\r\n          selected={this.props.selected}\r\n          side={20}\r\n          x={width}\r\n          y={height}\r\n        />\r\n        <NoteDelete\r\n          deleteNote={this.props.deleteNote}\r\n          noteId={note.id}\r\n          selected={this.props.selected}\r\n          side={30}\r\n          x={width}\r\n          y={height}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nclass Noteboard extends Component {\r\n  state = {\r\n    isDragging: false,\r\n    isResizing: false,\r\n    noteID: 0,\r\n    selectedNoteID: -1,\r\n    zIndex: 0,\r\n    notes: [],\r\n    mouseX: 0,\r\n    mouseY: 0,\r\n    dX: 0,\r\n    dY: 0,\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   let noteboard = localStorage.getItem(\"notes\");\r\n  //   if (noteboard) {\r\n  //     noteboard = JSON.parse(noteboard);\r\n  //     this.setState({\r\n  //       noteID: noteboard.noteID,\r\n  //       zIndex: noteboard.zIndex,\r\n  //       notes: noteboard.notes,\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    // localStorage.setItem(\"notes\", JSON.stringify(this.state));\r\n    console.log(this.state.noteID);\r\n  }\r\n\r\n  selectNote = (e, id) => {\r\n    e.currentTarget.style.zIndex = this.state.zIndex;\r\n    this.setState((prevState) => {\r\n      return {\r\n        selectedNoteID: id,\r\n        zIndex: prevState.zIndex++,\r\n      };\r\n    });\r\n  };\r\n\r\n  deselectNote = () => {\r\n    this.setState({\r\n      selectedNoteID: -1,\r\n    });\r\n  };\r\n\r\n  createNote = (e) => {\r\n    if (e.target.className !== \"noteboard\") return;\r\n    let notes = this.state.notes;\r\n    notes.push({\r\n      id: this.state.noteID,\r\n      width: 250,\r\n      height: 250,\r\n      x: e.clientX,\r\n      y: e.clientY,\r\n      zIndex: this.state.zIndex,\r\n      description: \"\",\r\n    });\r\n    this.setState((prevState) => {\r\n      return {\r\n        noteID: prevState.noteID++,\r\n        zIndex: prevState.zIndex++,\r\n        selectedNoteID: -1,\r\n        notes: notes,\r\n      };\r\n    });\r\n  };\r\n\r\n  getMouseInfoFromNote = (e, id) => {\r\n    let mouseX = e.clientX;\r\n    let mouseY = e.clientY;\r\n    let note = this.state.notes.find((x) => x.id === id);\r\n    let dX = mouseX - note.x;\r\n    let dY = mouseY - note.y;\r\n    return [mouseX, mouseY, dX, dY];\r\n  };\r\n\r\n  workWithNote = (id, func) => {\r\n    let notes = this.state.notes;\r\n    let index = notes.findIndex((x) => x.id === id);\r\n    notes[index] = func(notes[index]);\r\n    return notes;\r\n  };\r\n\r\n  dragNote = (e, id, action) => {\r\n    switch (action) {\r\n      case \"mousedown\":\r\n        let mouseInfo = this.getMouseInfoFromNote(e, id);\r\n        this.setState({\r\n          isDragging: true,\r\n          mouseX: mouseInfo[0],\r\n          mouseY: mouseInfo[1],\r\n          dX: mouseInfo[2],\r\n          dY: mouseInfo[3],\r\n        });\r\n        break;\r\n      case \"mousemove\":\r\n        let notes = this.workWithNote(this.state.selectedNoteID, (note) => {\r\n          note.x = e.clientX - this.state.dX;\r\n          note.y = e.clientY - this.state.dY;\r\n          return note;\r\n        });\r\n\r\n        this.setState({\r\n          notes: notes,\r\n        });\r\n        break;\r\n      case \"mouseup\":\r\n        this.setState({\r\n          isDragging: false,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  resizeNote = (e, id, action) => {\r\n    switch (action) {\r\n      case \"mousedown\":\r\n        let mouseInfo = this.getMouseInfoFromNote(e, id);\r\n        this.setState({\r\n          isResizing: true,\r\n          mouseX: mouseInfo[0],\r\n          mouseY: mouseInfo[1],\r\n          dX: mouseInfo[2],\r\n          dY: mouseInfo[3],\r\n        });\r\n        break;\r\n      case \"mousemove\":\r\n        let notes = this.workWithNote(this.state.selectedNoteID, (note) => {\r\n          note.width = e.clientX - note.x;\r\n          note.height = e.clientY - note.y;\r\n          return note;\r\n        });\r\n\r\n        this.setState({\r\n          notes: notes,\r\n        });\r\n        break;\r\n      case \"mouseup\":\r\n        this.setState({\r\n          isResizing: false,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  deleteNote = (e, id) => {\r\n    let notes = this.state.notes.filter((note) => note.id !== id);\r\n    this.setState({ notes: notes });\r\n  };\r\n\r\n  writeNote = (e) => {\r\n    let notes = this.workWithNote(this.state.selectedNoteID, (note) => {\r\n      note.description = e.target.value;\r\n      return note;\r\n    });\r\n\r\n    this.setState({\r\n      notes: notes,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let notes = this.state.notes.map((note) => (\r\n      <Note\r\n        key={note.id}\r\n        id={\"note-\" + note.id}\r\n        note={note}\r\n        selectNote={this.selectNote}\r\n        dragNote={this.dragNote}\r\n        resizeNote={this.resizeNote}\r\n        deleteNote={this.deleteNote}\r\n        writeNote={this.writeNote}\r\n        selected={this.state.selectedNoteID === note.id}\r\n        isDragging={this.state.isDragging}\r\n        isResizing={this.state.isResizing}\r\n        isNotIdle={this.state.isDragging || this.state.isResizing}\r\n      />\r\n    ));\r\n    return (\r\n      <div\r\n        className=\"noteboard\"\r\n        onDoubleClick={(e) => {\r\n          this.createNote(e);\r\n        }}\r\n        onMouseMove={(e) => {\r\n          if (this.state.selectedNoteID === -1) return;\r\n          if (this.state.isDragging)\r\n            this.dragNote(e, this.state.selectedNoteID, \"mousemove\");\r\n          else if (this.state.isResizing)\r\n            this.resizeNote(e, this.state.selectedNoteID, \"mousemove\");\r\n        }}\r\n        onMouseUp={(e) => {\r\n          if (this.state.isDragging)\r\n            this.dragNote(e, this.state.selectedNoteID, \"mouseup\");\r\n          else if (this.state.isResizing)\r\n            this.resizeNote(e, this.state.selectedNoteID, \"mouseup\");\r\n          if (e.target.className === \"noteboard\") this.deselectNote();\r\n        }}\r\n      >\r\n        {notes}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Noteboard;\r\n","import React from \"react\";\nimport Noteboard from \"./Noteboard\";\n\nfunction App() {\n  return <Noteboard />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}